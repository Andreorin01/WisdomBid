{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8000/auth\"; // Replace with your backend URL if different\n\n// Signup API call\nexport const signup = async (email, password, role) => {\n  try {\n    const response = await axios.post(`${API_URL}/signup`, {\n      email,\n      password,\n      role\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Signup failed:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// Login API call\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      email,\n      password\n    });\n    localStorage.setItem(\"token\", response.data.access_token); // Save token to localStorage\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"Login failed:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\n\n// Fetch protected data\nexport const getProtectedData = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = await axios.get(`${API_URL}/protected`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"Fetching protected data failed:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\n\n// Logout function\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n};\n\n// Check if the user is authenticated\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem(\"token\");\n  return !!token; // Returns true if a token exists, false otherwise\n};","map":{"version":3,"names":["axios","API_URL","signup","email","password","role","response","post","data","error","_error$response","console","message","login","localStorage","setItem","access_token","_error$response2","getProtectedData","token","getItem","get","headers","Authorization","_error$response3","logout","removeItem","isAuthenticated"],"sources":["/Users/ionutartene/Documents/Aplicatii/WisdomBid/frontend/src/services/authService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8000/auth\"; // Replace with your backend URL if different\n\n// Signup API call\nexport const signup = async (email, password, role) => {\n  try {\n    const response = await axios.post(`${API_URL}/signup`, { email, password, role });\n    return response.data;\n  } catch (error) {\n    console.error(\"Signup failed:\", error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// Login API call\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, { email, password });\n    localStorage.setItem(\"token\", response.data.access_token); // Save token to localStorage\n    return response.data;\n  } catch (error) {\n    console.error(\"Login failed:\", error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// Fetch protected data\nexport const getProtectedData = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = await axios.get(`${API_URL}/protected`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Fetching protected data failed:\", error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// Logout function\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n};\n\n// Check if the user is authenticated\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem(\"token\");\n  return !!token; // Returns true if a token exists, false otherwise\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,4BAA4B,CAAC,CAAC;;AAE9C;AACA,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,SAAS,EAAE;MAAEE,KAAK;MAAEC,QAAQ;MAAEC;IAAK,CAAC,CAAC;IACjF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdC,OAAO,CAACF,KAAK,CAAC,gBAAgB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IACtE,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,KAAK,GAAG,MAAAA,CAAOV,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,QAAQ,EAAE;MAAEE,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC1EU,YAAY,CAACC,OAAO,CAAC,OAAO,EAAET,QAAQ,CAACE,IAAI,CAACQ,YAAY,CAAC,CAAC,CAAC;IAC3D,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAQ,gBAAA;IACdN,OAAO,CAACF,KAAK,CAAC,eAAe,EAAE,EAAAQ,gBAAA,GAAAR,KAAK,CAACH,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IACrE,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,KAAK,GAAGL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMd,QAAQ,GAAG,MAAMN,KAAK,CAACqB,GAAG,CAAC,GAAGpB,OAAO,YAAY,EAAE;MACvDqB,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUJ,KAAK;MAAG;IAC9C,CAAC,CAAC;IACF,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAe,gBAAA;IACdb,OAAO,CAACF,KAAK,CAAC,iCAAiC,EAAE,EAAAe,gBAAA,GAAAf,KAAK,CAACH,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBhB,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IACvF,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMgB,MAAM,GAAGA,CAAA,KAAM;EAC1BX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMR,KAAK,GAAGL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAO,CAAC,CAACD,KAAK,CAAC,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}